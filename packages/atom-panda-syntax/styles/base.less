@import "syntax-variables";
@import "mixins";

:host,
atom-text-editor {
	background-color: @syntax-background-color;
	color: @syntax-text-color;
	.wrap-guide {
		background-color: @syntax-wrap-guide-color;
	}
	.indent-guide {
		color: @syntax-indent-guide-color;
	}
	.invisible-character {
		color: @syntax-invisible-character-color;
	}
	.line.cursor-line{
		background-color: rgba(99, 123, 156, 0.07);
	}
	.gutter {
		background-color: @syntax-gutter-background-color;
		color: @syntax-gutter-text-color;
		.line-number {
			&.cursor-line {
				background-color: @syntax-gutter-background-color-selected;
				color: @syntax-gutter-text-color-selected;
			}
			&.cursor-line-no-selection {
				color: @syntax-gutter-text-color-selected;
			}
		}
	}
	.fold-marker:after,
	.gutter .line-number.folded,
	.gutter .line-number:after {
		color: @light-gray;
	}
	.invisible {
		color: @syntax-text-color;
	}
	.cursor {
		color: @syntax-cursor-color;
	}
	.selection .region {
		background-color: @syntax-selection-color;
	}
}
:host .search-results .marker .region,
atom-text-editor .search-results .marker .region {
	background-color: transparent;
	border: 1px solid @syntax-result-marker-color;
}
:host .search-results .marker.current-result .region,
atom-text-editor .search-results .marker.current-result .region {
	border: 1px solid @syntax-result-marker-color-selected;
}
.comment {
	color: @light-midnight;
	font-style: italic;
}
.keyword {
	color: @pink;
	&.control {
		color: @pink;
		&.html {
			&.custom {
				color: @orange;
			}
		}
		&.scss,
		&.less,
		&.css{
			&.import {
				color: @light-pink !important;
			}
			&.at-rule {
				color: @purple !important;
				.keyword {
					color: @purple;
				}
			}
		}
		&.jade, &.pug {
			&.include {
				color: @green;
			}
		}
		&.new {
			color: @pink;
			font-style: italic;
		}
	}
	&.operator {
		color: @syntax-text-color;
		&.new {
			color: @pink;
			font-style: italic;
		}
		&.accessor {
			color: @lighter-gray;
		}
		&.logical {
			color: @light-orange;
		}
		&.key {
			color: @light-orange;
		}
		&.comparison {
			color: @light-orange;
		}
		&.php.class {
			color: @orange;
		}
	}
	&.other.important {
		color: lighten(@red, 6%);
	}
	&.other.special-method {
		color: @blue;
	}
	&.other.unit {
		color: @orange;
	}
	&.other.ini {
		color: @red;
	}
}
.storage {
	color: @orange;
	&.java {
		&.type {
			font-style: italic;
		}
		&.modifier {
			&.import {
				color: @very-light-gray;
			}
			&.package {
				color: @blue;
			}
		}
	}
	&.pug, &.jade {
		&.type {
			&.import {
				&.include {
					color: @purple;
				}
			}
		}
	}
}

.constant {
	color: @orange;
	&.character.escape {
		color: @blue;
	}
	&.id {
		&.tag {
			&.pug, &.jade {
				color: @light-blue;
			}
		}
	}
	&.numeric {
		color: @orange;
	}
	&.other.color {
		color: @blue;
		.constant {
			color: @blue;
		}
	}
	&.other.symbol {
		color: @green;
	}
}
.variable {
	color: @light-pink;
	&.interpolation {
		color: darken(@pink, 10%);
	}
	&.parameter.function {
		color: @lighter-gray;
		font-style: italic;
	}
	&.control {
		&.import {
			&.include {
				&.pug {
					color: @green;
				}
			}
		}
	}
	&.other {
		&.js {
			&.readwrite {
				color: @syntax-text-color;
			}
			&.property {
				color: @very-light-gray;
			}
		}
		&.php {
			color: @lighter-gray;
		}
	}
	&.php {
		color: @pink;
	}
}
.invalid {
	&.illegal {
		border-bottom: 1px dashed fade(@red, 50%);
	}
	&.deprecated {
		background-color: fade(#FF2C6D, 62%);
	}
}


.string {
	color: @green;
	&.regexp {
		color: @blue;
		.source.ruby.embedded {
			color: @orange;
		}
	}
	&.unquoted {
		&.js {
			color: @light-orange;
		}
	}
	& .punctuation {
		.section.embedded .source {
			color: @green;
		}
	}
	&.other.link {
		color: @red;
	}
}
.punctuation {
	// color: @very-light-gray;
	&.definition {
		&.comment {
			color: @light-midnight;
		}
		&.array,
		&.parameters,
		&.string,
		&.variable {
			color: @syntax-text-color;
		}
		&.heading,
		&.identity {
			color: @blue;
		}
		&.string{
			color: @green;
		}
		&.bold {
			color: @light-orange;
			font-weight: bold;
		}
		&.italic {
			color: @pink;
			font-style: italic;
		}
		&.tag {
			&.jsx {
				color: @orange;
			}
		}
		&.php {
			&.variable {
				color: @lighter-gray;
			}
		}
	}
	&.section.embedded {
		color: lighten(@pink, 10%);
		&.php {
			&.begin,
			&.end {
				color: @very-light-gray;
			}
		}
	}
}
.support {
	&.class {
		color: @light-orange;
	}
	&.type {
		color: @white;
		&.object {
			&.module {
				&.js {
					color: @purple;
				}
			}
		}
	}
	&.function {
		color: @light-blue;
		&.any-method {
			color: @light-blue;
		}
	}
	&.other {
		&.namespace {
			&.php {
				color: @purple;
			}
		}
	}
}
.entity {
	&.name.function {
		color: @light-blue;
	}
	&.name.type {
		color: @light-orange;
	}
	&.other.inherited-class {
		color: @green;
	}
	&.name.class,
	&.name.type.class {
		color: @light-orange;
	}
	&.name.section {
		color: @blue;
	}
	&.name.tag {
		color: @red;
		// font-weight: 500;
	}
	&.other.attribute-name {
		color: @orange;
		&.id {
			color: @blue;
		}
	}
}
.meta {
	&.class {
		color: @light-orange;
	}
	&.link {
		color: @orange;
	}
	&.require {
		color: @blue;
	}
	&.selector {
		color: @pink;
	}
	&.separator {
		background-color: @gray;
		color: @syntax-text-color;
	}
	&.method-call.java {
		color: @very-light-gray;
	}
	&.function-call {
		&.object.php {
			color: @light-blue;
		}
	}
	&.function {
		&.arguments {
			font-style: italic;
		}
	}
}
.none {
	color: @syntax-text-color;
}
.markup {
	&.bold {
		color: @orange;
		font-weight: bold;
	}
	&.changed {
		color: @pink;
	}
	&.deleted {
		color: @red;
	}
	&.italic {
		color: @pink;
		font-style: italic;
	}
	&.heading .punctuation.definition.heading {
		color: @blue;
	}
	&.inserted {
		color: @green;
	}
	&.list {
		color: @red;
	}
	&.quote {
		color: @orange;
	}
	&.raw.inline {
		color: @green;
	}
}
.source.gfm .markup {
	-webkit-font-smoothing: auto;
	color: lighten(@light-gray, 5);
	&.heading {
		color: @green;
	}
	&.link {
		color: @light-orange;
	}
	&.list {
		&.ordered {
			color: @pink;
		}
	}
}
.bracket-matcher .region {
	border-bottom-color: @green;
}
:host([mini]) .scroll-view,
atom-text-editor[mini] .scroll-view {
	padding-left: 2px;
}
